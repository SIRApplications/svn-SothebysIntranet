<?php

// $Id$

/**
 * Update the tables to UTF-8
 */
function attachment_ext_update_1() {
  return _system_update_utf8(array('attachment_ext'));
}

/**
 * Install the initial schema.
 */
function attachment_ext_install() {
  if (!db_table_exists('attachment_ext')) {
    switch ($GLOBALS['db_type']) {
      case 'mysql':
      case 'mysqli':
        db_query(
<<<MYSQL_UPDATE
          CREATE TABLE {attachment_ext} (
            aid int(10) unsigned NOT NULL,
            nid int(10) unsigned NOT NULL,
            fid int(10) unsigned NOT NULL,
            filename varchar(255) NOT NULL,
            title varchar(255) NOT NULL,
            description varchar(255) NOT NULL,
            size int(12) NOT NULL,
            hidden char(1) NOT NULL,
		revised char(1) NOT NULL,
	      created int(11) NOT NULL,
            PRIMARY KEY (aid)
          ) /*!40100 DEFAULT CHARACTER SET utf8 */;
MYSQL_UPDATE
        );
        break;
  
      case 'pgsql':
        db_query(
<<<PGSQL_UPDATE
        create table {attachment_ext} (
          aid serial primary key,
          nid integer not null,
          fid integer not null,
          filename varchar(255) not null,
          title varchar(255) not null,
          description varchar(255) not null,
          size integer not null,
          hidden char(1) not null,
	    revised char(1) not null,
	    created int(11) not null
        );
PGSQL_UPDATE
        );
        break;
    } // End switch($GLOBALS['db_type'])
  } // End if( ! db_table_exists('attachment_ext') )
}

/**
 * Uninstall table
 */
function attachment_ext_uninstall() {
  db_query('DROP TABLE {attachment_ext}');
  variable_del('attachment_ext_display_teaser');
  variable_del('attachment_ext_private_files');
  variable_del('attachment_ext_text_rename_whitelist');
  $nodetypes = node_get_types();
  foreach ($nodetypes as $type => $v) {
    variable_del('attachment_ext_node_'. $type);
  }
}
